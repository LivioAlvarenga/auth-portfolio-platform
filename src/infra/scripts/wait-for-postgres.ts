/**
 * Este script verifica se o PostgreSQL est√° aceitando conex√µes.
 * Ele √© executado como parte do processo de inicializa√ß√£o do projeto
 * para garantir que o banco de dados esteja pronto antes de iniciar
 * as migra√ß√µes e o servidor de desenvolvimento do Next.js.
 *
 * Fluxo de Inicializa√ß√£o:
 * Quando voc√™ executa `npm run dev`, os seguintes passos s√£o seguidos:
 *
 * 1. Os servi√ßos do Docker s√£o iniciados (`services:up`).
 * 2. O script `wait-for-postgres.ts` √© executado para verificar se o PostgreSQL est√° aceitando conex√µes (`wait-for-postgres`).
 * 3. As migra√ß√µes do banco de dados s√£o aplicadas (`migration:up`).
 * 4. O servidor de desenvolvimento do Next.js √© iniciado (`next dev`).
 */

async function checkPostgres() {
  const { exec } = await import('node:child_process')

  exec('docker exec postgres-dev pg_isready --host localhost', handleReturn)

  function handleReturn(error: Error | null, stdout: string) {
    if (stdout.search('accepting connections') === -1) {
      process.stdout.write('.')
      checkPostgres() // recursive call
      return
    }

    console.log('\nüü¢ PostgreSQL is accepting connections\n')
  }
}

process.stdout.write('\n\nüî¥ Waiting for PostgreSQL to accept connections')
checkPostgres()
